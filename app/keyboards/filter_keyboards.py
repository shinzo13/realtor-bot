from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from app.db.enums import Renovation


def back_kb():
    return InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back")]])

def realty_type_kb():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –∂–∏–ª—å—è"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üè¢ –ö–≤–∞—Ä—Ç–∏—Ä–∞", callback_data="realty_flat")],
        [InlineKeyboardButton(text="üè† –î–æ–º", callback_data="realty_house")],
    ])


def apartment_value_kb():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –∫–≤–∞—Ä—Ç–∏—Ä (–∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ã –∏–ª–∏ –æ–±—ã—á–Ω—ã–µ)"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üè† –û–±—ã—á–Ω—ã–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã", callback_data="apartment_no")],
        [InlineKeyboardButton(text="üè¢ –ê–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ã", callback_data="apartment_yes")],
        # [InlineKeyboardButton(text="üìÑ –õ—é–±—ã–µ", callback_data="apartment_any")],
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back")]
    ])


def room_count_kb(selected_rooms=None):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–æ–º–Ω–∞—Ç —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞"""
    if selected_rooms is None:
        selected_rooms = set()

    keyboard = []

    studio_text = "‚úÖ –°—Ç—É–¥–∏—è" if 9 in selected_rooms else "–°—Ç—É–¥–∏—è"
    keyboard.append([InlineKeyboardButton(text=studio_text, callback_data="room_9")])

    row2 = []
    for rooms in range(1,6):
        text = f"‚úÖ {rooms}" if rooms in selected_rooms else str(rooms)
        row2.append(InlineKeyboardButton(text=text, callback_data=f"room_{rooms}"))

    keyboard.append(row2)

    row3 = [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back"),
            InlineKeyboardButton(text="–î–∞–ª—å—à–µ ‚û°Ô∏è", callback_data="rooms_confirm")]

    keyboard.append(row3)

    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def search_address_kb():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –∞–¥—Ä–µ—Å–∞"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìç –í—ã–±—Ä–∞—Ç—å –∞–¥—Ä–µ—Å", switch_inline_query_current_chat="")],
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back")]
    ])


def price_range_kb():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Ü–µ–Ω–æ–≤–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="–ù–µ–≤–∞–∂–Ω–æ", callback_data="price_any")
        ],
        [
            InlineKeyboardButton(text="–î–æ 30–∫", callback_data="price_0_30000"),
            InlineKeyboardButton(text="30-50–∫", callback_data="price_30000_50000")
        ],
        [
            InlineKeyboardButton(text="50-80–∫", callback_data="price_50000_80000"),
            InlineKeyboardButton(text="80-120–∫", callback_data="price_80000_120000")
        ],
        [
            InlineKeyboardButton(text="120–∫+", callback_data="price_120000_0"),
            InlineKeyboardButton(text="üí∞ –°–≤–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω", callback_data="price_custom")
        ],
        [
            InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back")
        ]
    ])


def other_filters_kb(selected_other_filters=None):
    if selected_other_filters is None:
        selected_other_filters = set()
    other_filters = {
        "kids": "–° –¥–µ—Ç—å–º–∏",
        "pets": "–° –∂–∏–≤–æ—Ç–Ω—ã–º–∏",
        "no_deposit": "–ë–µ–∑ –∑–∞–ª–æ–≥–∞"
    }

    keyboard = []

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞ —Ä–µ–º–æ–Ω—Ç–∞
    for renovation, name in other_filters.items():
        text = f"‚úÖ {name}" if renovation in selected_other_filters else name
        keyboard.append([InlineKeyboardButton(text=text, callback_data=f"other_{renovation}")])

    # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    control_buttons = [
        InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back"),
        InlineKeyboardButton(text="–î–∞–ª—å—à–µ ‚û°Ô∏è", callback_data="other_confirm")
    ]
    keyboard.append(control_buttons)
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def renovation_kb(selected_renovations=None):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–æ–≤ —Ä–µ–º–æ–Ω—Ç–∞ —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º –≤—ã–±–æ—Ä–æ–º"""
    if selected_renovations is None:
        selected_renovations = set()

    renovation_names = {
        "any": "–ù–µ–≤–∞–∂–Ω–æ",
        "cosmetic": "–ö–æ—Å–º–µ—Ç–∏—á–µ—Å–∫–∏–π",
        "euro": "–ï–≤—Ä–æ—Ä–µ–º–æ–Ω—Ç",
        "designed": "–î–∏–∑–∞–π–Ω–µ—Ä—Å–∫–∏–π"
    }

    keyboard = []

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞ —Ä–µ–º–æ–Ω—Ç–∞
    for renovation, name in renovation_names.items():
        text = f"‚úÖ {name}" if renovation in selected_renovations else name
        keyboard.append([InlineKeyboardButton(text=text, callback_data=f"renovation_{renovation}")])

    # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    control_buttons = [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back"),
                       InlineKeyboardButton(text="–î–∞–ª—å—à–µ ‚û°Ô∏è", callback_data="renovation_confirm")]
    keyboard.append(control_buttons)
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


# def keywords_kb():
#     """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤–≤–æ–¥–∞ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤"""
#     return InlineKeyboardMarkup(inline_keyboard=[
#         [InlineKeyboardButton(text="‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", callback_data="keywords_skip")],
#         [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_renovation")]
#     ])


def confirm_filter_kb():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–∞"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back"),
            InlineKeyboardButton(text="‚úÖ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä", callback_data="filter_save")
        ],
#        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="filter_cancel")]
    ])

#
# def edit_filter_kb():
#     """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–∞"""
#     return InlineKeyboardMarkup(inline_keyboard=[
#         [
#             InlineKeyboardButton(text="üè† –¢–∏–ø –∂–∏–ª—å—è", callback_data="edit_building_type"),
#             InlineKeyboardButton(text="üè¢ –ê–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ã", callback_data="edit_apartment_type")
#         ],
#         [
#             InlineKeyboardButton(text="üî¢ –ö–æ–º–Ω–∞—Ç—ã", callback_data="edit_rooms"),
#             InlineKeyboardButton(text="üìç –ê–¥—Ä–µ—Å", callback_data="edit_address")
#         ],
#         [
#             InlineKeyboardButton(text="üí∞ –¶–µ–Ω–∞", callback_data="edit_price"),
#             InlineKeyboardButton(text="üí≥ –ó–∞–ª–æ–≥", callback_data="edit_deposit")
#         ],
#         [
#             InlineKeyboardButton(text="üë∂ –î–µ—Ç–∏", callback_data="edit_kids"),
#             InlineKeyboardButton(text="üêï –ñ–∏–≤–æ—Ç–Ω—ã–µ", callback_data="edit_pets")
#         ],
#         [
#             InlineKeyboardButton(text="üî® –†–µ–º–æ–Ω—Ç", callback_data="edit_renovation"),
#             InlineKeyboardButton(text="üîç –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞", callback_data="edit_keywords")
#         ],
#         [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—é", callback_data="back_to_confirm")]
#     ])